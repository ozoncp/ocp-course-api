# Ups local test environment.

version: '3'
services:
  postgres:
    build: ./postgres
    ports:
      - "5432:5432"
    command: postgres -c max_connections=300 -c log_min_messages=NOTICE
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - /tmp/ocp-course-api-postgres-data:/var/lib/postgresql/data

  zoo:
    image: zookeeper:3.5.6
    hostname: test-zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=test-zoo:2888:3888;2181

  kafka-1:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "19094:19094"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://kafka-1:9094,FOR_HOST://kafka-1:19094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://kafka-1:9094,FOR_HOST://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT,FOR_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo

  ocp-course-api:
    image: ocp-course-api:dev
    ports:
      - "17000:7000"
      - "17002:7002"
    environment:
      KAFKA_BROKERS: "[\"kafka-1:9094\"]"

  ocp-lesson-api:
    image: ocp-lesson-api:dev
    ports:
      - "27000:7000"
      - "27002:7002"
    environment:
      KAFKA_BROKERS: "[\"kafka-1:9094\"]"

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet:  192.180.3.1/24

