// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package slice

import "github.com/ozoncp/ocp-course-api/api/model"

func FilterOutInt(xs []int, skip []int) []int {
	filter := make(map[int]struct{}, len(skip))
	for _, v := range skip {
		filter[v] = struct{}{}
	}
	res := []int{}
	for _, v := range xs {
		if _, shouldSkip := filter[v]; !shouldSkip {
			res = append(res, v)
		}
	}
	return res
}

func FilterOutModelCourse(xs []model.Course, skip []model.Course) []model.Course {
	filter := make(map[model.Course]struct{}, len(skip))
	for _, v := range skip {
		filter[v] = struct{}{}
	}
	res := []model.Course{}
	for _, v := range xs {
		if _, shouldSkip := filter[v]; !shouldSkip {
			res = append(res, v)
		}
	}
	return res
}

func FilterOutModelLesson(xs []model.Lesson, skip []model.Lesson) []model.Lesson {
	filter := make(map[model.Lesson]struct{}, len(skip))
	for _, v := range skip {
		filter[v] = struct{}{}
	}
	res := []model.Lesson{}
	for _, v := range xs {
		if _, shouldSkip := filter[v]; !shouldSkip {
			res = append(res, v)
		}
	}
	return res
}
