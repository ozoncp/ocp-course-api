// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package slice

import (
	"github.com/ozoncp/ocp-course-api/api/model"
	"github.com/ozoncp/ocp-course-api/internal/utils/commons"
)

func GenerateWindowsInt(xs []int, size int, step int) [][]int {
	srcLen := len(xs)
	res := make([][]int, 0)
	for i := 0; i < srcLen; i += step {
		end := commons.MinInt(i+size, srcLen)
		res = append(res, xs[i:end:end])
		if i+size >= srcLen {
			break
		}
	}
	return res
}

func GenerateWindowsModelCourse(xs []model.Course, size int, step int) [][]model.Course {
	srcLen := len(xs)
	res := make([][]model.Course, 0)
	for i := 0; i < srcLen; i += step {
		end := commons.MinInt(i+size, srcLen)
		res = append(res, xs[i:end:end])
		if i+size >= srcLen {
			break
		}
	}
	return res
}

func GenerateWindowsModelLesson(xs []model.Lesson, size int, step int) [][]model.Lesson {
	srcLen := len(xs)
	res := make([][]model.Lesson, 0)
	for i := 0; i < srcLen; i += step {
		end := commons.MinInt(i+size, srcLen)
		res = append(res, xs[i:end:end])
		if i+size >= srcLen {
			break
		}
	}
	return res
}
