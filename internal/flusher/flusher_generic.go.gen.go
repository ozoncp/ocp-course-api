// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package flusher

import (
	"github.com/ozoncp/ocp-course-api/internal/api/model"
	"github.com/ozoncp/ocp-course-api/internal/utils/commons"
	"github.com/ozoncp/ocp-course-api/internal/utils/slice"
)

type FlusherModelCourse interface {
	FlushModelCourse(vs []model.Course) []model.Course
}

type repoModelCourse interface {
	AddModelCourses(vs []model.Course) error
}

type flusherModelCourse struct {
	repo      repoModelCourse
	batchSize commons.NaturalInt
}

func (this *flusherModelCourse) FlushModelCourse(vs []model.Course) []model.Course {
	var res []model.Course
	slice.SlidingModelCourse(vs, this.batchSize, this.batchSize, func(pos int, window []model.Course) bool {
		err := this.repo.AddModelCourses(window)
		if err != nil {
			res = vs[pos:]
			return false
		}
		return true
	})
	return res
}

func NewFlusherModelCourse(repo repoModelCourse, batchSize commons.NaturalInt) FlusherModelCourse {
	return &flusherModelCourse{repo, batchSize}
}

type FlusherModelLesson interface {
	FlushModelLesson(vs []model.Lesson) []model.Lesson
}

type repoModelLesson interface {
	AddModelLessons(vs []model.Lesson) error
}

type flusherModelLesson struct {
	repo      repoModelLesson
	batchSize commons.NaturalInt
}

func (this *flusherModelLesson) FlushModelLesson(vs []model.Lesson) []model.Lesson {
	var res []model.Lesson
	slice.SlidingModelLesson(vs, this.batchSize, this.batchSize, func(pos int, window []model.Lesson) bool {
		err := this.repo.AddModelLessons(window)
		if err != nil {
			res = vs[pos:]
			return false
		}
		return true
	})
	return res
}

func NewFlusherModelLesson(repo repoModelLesson, batchSize commons.NaturalInt) FlusherModelLesson {
	return &flusherModelLesson{repo, batchSize}
}
