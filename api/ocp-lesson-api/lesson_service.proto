syntax = "proto3";

import "google/api/annotations.proto";
import "validate/validate.proto";

package ocp.lesson.api;

option go_package = "github.com/ozoncp/ocp-course-api/api/ocp-lesson-api;ocp_lesson_api";

service OcpLessonApi {
    rpc ListLessonsV1(ListLessonsV1Request) returns (ListLessonsV1Response) {
        option (google.api.http) = {
            get: "/v1/lessons"
        };
    }

    rpc DescribeLessonV1(DescribeLessonV1Request) returns (DescribeLessonV1Response) {
        option (google.api.http) = {
            get: "/v1/lessons/{lesson_id}"
        };
    }

    rpc CreateLessonV1(CreateLessonV1Request) returns (CreateLessonV1Response) {
        option (google.api.http) = {
            post: "/v1/lessons"
            body: "lesson"
        };
    }

    rpc RemoveLessonV1(RemoveLessonV1Request) returns (RemoveLessonV1Response) {
        option (google.api.http) = {
            delete: "/v1/lessons/{lesson_id}"
        };
    }
}

message Lesson {
    uint64 id = 1 [(validate.rules).uint64.gt = 0];
    uint64 course_id = 2 [(validate.rules).uint64.gt = 0];
    uint32 number = 3 [(validate.rules).uint32.gt = 0];
    string name = 4 [(validate.rules).string.min_len = 1];
}

message ListLessonsV1Request {
    uint64 limit = 1 [(validate.rules).uint64 = {gt:0, lte:1000}];
    uint64 offset = 2;
}

message ListLessonsV1Response {
    repeated Lesson lessons = 1;
}

message DescribeLessonV1Request {
    uint64 lesson_id = 1 [(validate.rules).uint64.gt = 0];
}

message DescribeLessonV1Response {
    Lesson lesson = 1;
}

message CreateLessonV1Request {
    Lesson lesson = 1 [(validate.rules).any.required = true];
}

message CreateLessonV1Response {
    uint64 lesson_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemoveLessonV1Request {
    uint64 lesson_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemoveLessonV1Response {
    bool found = 1;
}
